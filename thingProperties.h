// Code generated by Arduino IoT Cloud, DO NOT EDIT.

#include <ArduinoIoTCloud.h>
#include <Arduino_ConnectionHandler.h>

const char SSID[]     = SECRET_SSID;    // Network SSID (name)
const char PASS[]     = SECRET_OPTIONAL_PASS;    // Network password (use for WPA, or use as key for WEP)

void onEYEEARChange();
void onMainAlcoholChange();
void onPerssurepascalChange();
void onPPMAlcoholChange();
void onPressureChange();
void onEYEEARIntegerChange();
void onIntAlcoholPPMChange();
void onIntgerPressurepascalChange();
void onEmailalcoholChange();
void onEyeStateChange();

float eYE_EAR;
float main_Alcohol;
float perssurepascal;
float pPM_Alcohol;
CloudForce pressure;
int eYE_EAR_Integer;
int int_Alcohol_PPM;
int intger_pressurepascal;
bool emailalcohol;
bool eye_state;

void initProperties(){

  ArduinoCloud.addProperty(eYE_EAR, READWRITE, ON_CHANGE, onEYEEARChange);
  ArduinoCloud.addProperty(main_Alcohol, READWRITE, ON_CHANGE, onMainAlcoholChange);
  ArduinoCloud.addProperty(perssurepascal, READWRITE, ON_CHANGE, onPerssurepascalChange);
  ArduinoCloud.addProperty(pPM_Alcohol, READWRITE, ON_CHANGE, onPPMAlcoholChange);
  ArduinoCloud.addProperty(pressure, READWRITE, ON_CHANGE, onPressureChange);
  ArduinoCloud.addProperty(eYE_EAR_Integer, READWRITE, ON_CHANGE, onEYEEARIntegerChange);
  ArduinoCloud.addProperty(int_Alcohol_PPM, READWRITE, ON_CHANGE, onIntAlcoholPPMChange);
  ArduinoCloud.addProperty(intger_pressurepascal, READWRITE, ON_CHANGE, onIntgerPressurepascalChange);
  ArduinoCloud.addProperty(emailalcohol, READWRITE, ON_CHANGE, onEmailalcoholChange);
  ArduinoCloud.addProperty(eye_state, READWRITE, ON_CHANGE, onEyeStateChange);

}

WiFiConnectionHandler ArduinoIoTPreferredConnection(SSID, PASS);
